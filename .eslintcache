[{"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\index.tsx":"1","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"3","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\app\\App.tsx":"4","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"5","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"7","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx":"8","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\Login\\Login.tsx":"9","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\api\\todolists-api.ts":"10","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\Login\\auth-reducer.ts":"11","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\app\\store.ts":"12","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\app\\app-reducer.ts":"13","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"14","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts":"15"},{"size":752,"mtime":1631202265920,"results":"16","hashOfConfig":"17"},{"size":4028,"mtime":1632903103458,"results":"18","hashOfConfig":"17"},{"size":1773,"mtime":1596295538000,"results":"19","hashOfConfig":"17"},{"size":2599,"mtime":1631218570931,"results":"20","hashOfConfig":"17"},{"size":1092,"mtime":1596716576000,"results":"21","hashOfConfig":"17"},{"size":4585,"mtime":1597327450000,"results":"22","hashOfConfig":"17"},{"size":4193,"mtime":1596715250000,"results":"23","hashOfConfig":"17"},{"size":1595,"mtime":1596715562000,"results":"24","hashOfConfig":"17"},{"size":3794,"mtime":1631213262535,"results":"25","hashOfConfig":"17"},{"size":3156,"mtime":1631218281528,"results":"26","hashOfConfig":"17"},{"size":1975,"mtime":1631218339861,"results":"27","hashOfConfig":"17"},{"size":1182,"mtime":1631211644693,"results":"28","hashOfConfig":"17"},{"size":2126,"mtime":1631216776115,"results":"29","hashOfConfig":"17"},{"size":952,"mtime":1594154724000,"results":"30","hashOfConfig":"17"},{"size":5633,"mtime":1596722126000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17tph2r",{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\index.tsx",[],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["68","69","70","71","72","73","74","75"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const isLogitIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn)\r\n\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLogitIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if (!isLogitIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n",["76","77"],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["78","79","80"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\app\\App.tsx",["81"],"import React, {useEffect} from 'react'\r\nimport './App.css'\r\nimport {AppBar, Button, Container, IconButton, LinearProgress, Toolbar, Typography} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from './store'\r\nimport {initializeAppTC, RequestStatusType} from './app-reducer'\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {logoutTC} from \"../features/Login/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nfunction App({demo = false}: PropsType) {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\r\n    const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(initializeAppTC())\r\n    },[])\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n    const handlerLogOut = ()=>{\r\n        dispatch(logoutTC())\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar />\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    {isLoggedIn && <Button color=\"inherit\" onClick={handlerLogOut}>Log out</Button>}\r\n                </Toolbar>\r\n                { status === 'loading' &&  <LinearProgress /> }\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Switch>\r\n                    <Route exact path={'/'} render={()=><TodolistsList demo={demo} />}/>\r\n                    <Route exact path={'/login'} render={()=><Login />}/>\r\n                    <Route path={ '/404' } render={ () => <h1>404: PAGE NOT FOUND</h1> }/>\r\n                    <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["82"],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["83","84","85","86","87","88"],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx",["89","90","91"],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\Login\\Login.tsx",["92"],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\api\\todolists-api.ts",["93"],"import axios from 'axios'\r\nimport {FormikErrorType} from \"../features/Login/Login\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'b2f483fb-12d0-416c-b898-fb3d62ff63f8'\r\n    }\r\n})\r\n\r\n// api\r\nexport const todolistsAPI = {\r\n    getTodolists() {\r\n        const promise = instance.get<TodolistType[]>('todo-lists');\r\n        return promise;\r\n    },\r\n    createTodolist(title: string) {\r\n        const promise = instance.post<ResponseType<{ item: TodolistType }>>('todo-lists', {title: title});\r\n        return promise;\r\n    },\r\n    deleteTodolist(id: string) {\r\n        const promise = instance.delete<ResponseType>(`todo-lists/${id}`);\r\n        return promise;\r\n    },\r\n    updateTodolist(id: string, title: string) {\r\n        const promise = instance.put<ResponseType>(`todo-lists/${id}`, {title: title});\r\n        return promise;\r\n    },\r\n    getTasks(todolistId: string) {\r\n        return instance.get<GetTasksResponse>(`todo-lists/${todolistId}/tasks`);\r\n    },\r\n    deleteTask(todolistId: string, taskId: string) {\r\n        return instance.delete<ResponseType>(`todo-lists/${todolistId}/tasks/${taskId}`);\r\n    },\r\n    createTask(todolistId: string, taskTitile: string) {\r\n        return instance.post<ResponseType<{ item: TaskType }>>(`todo-lists/${todolistId}/tasks`, {title: taskTitile});\r\n    },\r\n    updateTask(todolistId: string, taskId: string, model: UpdateTaskModelType) {\r\n        return instance.put<ResponseType<TaskType>>(`todo-lists/${todolistId}/tasks/${taskId}`, model);\r\n    }\r\n}\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ResponseType<{ userId: number }>>(`/auth/login`, data)\r\n    },\r\n    logout(){\r\n      return instance.delete<ResponseType<{}>>('/auth/login')\r\n    },\r\n    me(){\r\n        return instance.get<ResponseType<MeResponseType>>(`/auth/me`)\r\n    }\r\n}\r\n\r\n// types\r\nexport type MeResponseType ={\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\n\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    addedDate: string\r\n    order: number\r\n}\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: D\r\n}\r\n\r\nexport enum TaskStatuses {\r\n    New = 0,\r\n    InProgress = 1,\r\n    Completed = 2,\r\n    Draft = 3\r\n}\r\n\r\nexport enum TaskPriorities {\r\n    Low = 0,\r\n    Middle = 1,\r\n    Hi = 2,\r\n    Urgently = 3,\r\n    Later = 4\r\n}\r\n\r\nexport type TaskType = {\r\n    description: string\r\n    title: string\r\n    status: TaskStatuses\r\n    priority: TaskPriorities\r\n    startDate: string\r\n    deadline: string\r\n    id: string\r\n    todoListId: string\r\n    order: number\r\n    addedDate: string\r\n}\r\nexport type UpdateTaskModelType = {\r\n    title: string\r\n    description: string\r\n    status: TaskStatuses\r\n    priority: TaskPriorities\r\n    startDate: string\r\n    deadline: string\r\n}\r\ntype GetTasksResponse = {\r\n    error: string | null\r\n    totalCount: number\r\n    items: TaskType[]\r\n}\r\n",["94","95"],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\Login\\auth-reducer.ts",[],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\app\\store.ts",[],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\app\\app-reducer.ts",[],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\IT-incubator\\temp\\TD_list_playlist\\todolist-16\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts",["96","97"],{"ruleId":"98","severity":1,"message":"99","line":37,"column":8,"nodeType":"100","endLine":37,"endColumn":10,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":42,"column":8,"nodeType":"100","endLine":42,"endColumn":10,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"102","line":47,"column":8,"nodeType":"100","endLine":47,"endColumn":10,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"102","line":52,"column":8,"nodeType":"100","endLine":52,"endColumn":10,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"102","line":57,"column":8,"nodeType":"100","endLine":57,"endColumn":10,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"102","line":62,"column":8,"nodeType":"100","endLine":62,"endColumn":10,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"102","line":67,"column":8,"nodeType":"100","endLine":67,"endColumn":10,"suggestions":"108"},{"ruleId":"98","severity":1,"message":"102","line":72,"column":8,"nodeType":"100","endLine":72,"endColumn":10,"suggestions":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"98","severity":1,"message":"114","line":15,"column":97,"nodeType":"100","endLine":15,"endColumn":130,"suggestions":"115"},{"ruleId":"98","severity":1,"message":"114","line":20,"column":8,"nodeType":"100","endLine":20,"endColumn":41,"suggestions":"116"},{"ruleId":"98","severity":1,"message":"114","line":24,"column":8,"nodeType":"100","endLine":24,"endColumn":41,"suggestions":"117"},{"ruleId":"98","severity":1,"message":"118","line":26,"column":7,"nodeType":"100","endLine":26,"endColumn":9,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":45,"nodeType":"122","messageId":"123","endLine":10,"endColumn":47},{"ruleId":"98","severity":1,"message":"124","line":35,"column":8,"nodeType":"100","endLine":35,"endColumn":10,"suggestions":"125"},{"ruleId":"98","severity":1,"message":"114","line":39,"column":8,"nodeType":"100","endLine":39,"endColumn":42,"suggestions":"126"},{"ruleId":"98","severity":1,"message":"114","line":46,"column":8,"nodeType":"100","endLine":46,"endColumn":54,"suggestions":"127"},{"ruleId":"98","severity":1,"message":"114","line":48,"column":95,"nodeType":"100","endLine":48,"endColumn":134,"suggestions":"128"},{"ruleId":"98","severity":1,"message":"114","line":49,"column":101,"nodeType":"100","endLine":49,"endColumn":140,"suggestions":"129"},{"ruleId":"98","severity":1,"message":"114","line":50,"column":107,"nodeType":"100","endLine":50,"endColumn":146,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":9,"nodeType":"133","messageId":"134","endLine":2,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":2,"column":14,"nodeType":"133","messageId":"134","endLine":2,"endColumn":20},{"ruleId":"131","severity":1,"message":"136","line":2,"column":22,"nodeType":"133","messageId":"134","endLine":2,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":52,"column":28,"nodeType":"139","endLine":52,"endColumn":45},{"ruleId":"131","severity":1,"message":"140","line":2,"column":9,"nodeType":"133","messageId":"134","endLine":2,"endColumn":24},{"ruleId":"110","replacedBy":"141"},{"ruleId":"112","replacedBy":"142"},{"ruleId":"131","severity":1,"message":"143","line":5,"column":9,"nodeType":"133","messageId":"134","endLine":5,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":13,"column":94,"nodeType":"122","messageId":"123","endLine":13,"endColumn":96},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLogitIn'. Either include them or remove the dependency array.","ArrayExpression",["144"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["145"],["146"],["147"],["148"],["149"],["150"],["151"],"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["154"],["155"],["156"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["157"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["158"],["159"],["160"],["161"],["162"],["163"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'FormikErrorType' is defined but never used.",["152"],["153"],"'setAppErrorAC' is defined but never used.",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"166","fix":"169"},{"desc":"166","fix":"170"},{"desc":"166","fix":"171"},{"desc":"166","fix":"172"},{"desc":"166","fix":"173"},"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"174","fix":"177"},{"desc":"166","fix":"178"},{"desc":"179","fix":"180"},{"desc":"174","fix":"181"},{"desc":"174","fix":"182"},{"desc":"174","fix":"183"},{"desc":"174","fix":"184"},{"desc":"174","fix":"185"},"Update the dependencies array to be: [demo, dispatch, isLogitIn]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch]",{"range":"188","text":"189"},{"range":"190","text":"189"},{"range":"191","text":"189"},{"range":"192","text":"189"},{"range":"193","text":"189"},{"range":"194","text":"189"},{"range":"195","text":"189"},"Update the dependencies array to be: [props]",{"range":"196","text":"197"},{"range":"198","text":"197"},{"range":"199","text":"197"},{"range":"200","text":"189"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"201","text":"202"},{"range":"203","text":"197"},{"range":"204","text":"197"},{"range":"205","text":"197"},{"range":"206","text":"197"},{"range":"207","text":"197"},[1328,1330],"[demo, dispatch, isLogitIn]",[1499,1501],"[dispatch]",[1670,1672],[1875,1877],[2088,2090],[2289,2291],[2436,2438],[2615,2617],[765,798],"[props]",[1071,1104],[1261,1294],[1235,1237],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320]]